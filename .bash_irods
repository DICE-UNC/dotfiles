BASH_IRODS_REPO_DIR=~/software/irods

IRODS_REPO_ROOT=~/software

irods-build() {
    pushd $IRODS_REPO_ROOT/irods
    sudo packaging/build.sh icat postgres
    popd
}

irods-clone() {
    pushd $IRODS_REPO_ROOT
    sudo rm -rf irods
    git clone https://github.com/irods/irods.git
    if [ "$1" != "" ]; then
        cd irods
        git checkout $1
    fi
    popd
}

irods-valgrind() {
    LABEL=$1
    sudo service irods stop
    pushd /var/lib/irods/iRODS/server/bin
    VALGRIND_OUT=/tmp/$LABEL
    rm -rf $VALGRIND_OUT
    mkdir $VALGRIND_OUT
    export PATH=$PATH:`pwd` 
    valgrind --tool=memcheck --leak-check=full --trace-children=yes --num-callers=200 --time-stamp=yes --log-file=$VALGRIND_OUT/valgrind_out_%p.txt ./irodsServer
    sleep 30
    ils
    r=""
    SUMM=/tmp/sum
    echo "" > $SUM
    for f in $VALGRIND_OUT; do
        r=`grep regionRegion2Cp $f`
        if [ "$r" != "" ]; then
            echo $LABEL failed >> $SUM
            break
        fi
    done
    if [ "$r" == "" ]; then
        echo $LABEL succeeded >> $SUM
    fi
    popd
}

irods-bulk-valgrind() {
    irods-clone $1
    COMMITS=`git log --pretty=format:%H --max-count=100`
    i=0
    for c in $COMMITS; do
        irods-clone $c
        irods-build
        irods-repave-dev
        irods-valgrind $i-$c
        i=$((i+1))
    done
}

irods-stop-server() {
    sudo su - irods -c "/var/lib/irods/iRODS/irodsctl stop"
}

irods-create-database() {
   sudo su - postgres -c "psql --command=\"create user irods with password 'testpassword';\""
   sudo su - postgres -c "psql --command='create database \"ICAT\";'"
   sudo su - postgres -c "psql --command='grant all privileges on database \"ICAT\" to irods;'"
}

irods-remake-database() {
    sudo su - postgres -c "psql --command='drop database \"ICAT\";'"
    sudo su - postgres -c "psql --command='create database \"ICAT\";'"
}

irods-uninstall-irods() {
    sudo dpkg -P irods-resource-plugin-s3 irods-database-plugin-postgres irods-database-plugin-mysql irods-icat irods-dev irods-runtime irods-api-plugin-gridreport irods-icommands-gridreport
    sudo userdel irods
    sudo rm -rf /var/lib/irods
    sudo rm -rf /etc/irods
    sudo rm -rf /tmp/irods
    sudo rm -rf /usr/lib/irods
}

irods-install-irods-dev() {
    sudo dpkg -i ${BASH_IRODS_REPO_DIR}/build/irods-icat-*.deb ${BASH_IRODS_REPO_DIR}/build/irods-database-plugin-*.deb ${BASH_IRODS_REPO_DIR}/build/irods-dev-*.deb ${BASH_IRODS_REPO_DIR}/build/irods-runtime-*.deb
}

irods-install-irods-403() {
    local package_dir=~/software/irods-old-packages/4.0.3
    sudo dpkg -i ${package_dir}/irods-icat-4.0.3-64bit.deb ${package_dir}/irods-database-plugin-postgres-1.4.deb ${package_dir}/irods-dev-4.0.3-64bit.deb ${package_dir}/irods-runtime-4.0.3-64bit.deb
}

irods-install-irods-403-debug() {
    local package_dir=~/software/irods-old-packages/4.0.3-debug
    sudo dpkg -i ${package_dir}/irods-icat-4.0.3-64bit.deb ${package_dir}/4.0.3-debug/irods-database-plugin-postgres-1.4.deb ${package_dir}/irods-dev-4.0.3-64bit.deb ${package_dir}/irods-runtime-4.0.3-64bit.deb
}

irods-setup-irods() {
    sudo /var/lib/irods/packaging/setup_irods.sh < /var/lib/irods/tests/localhost_setup_postgres.input
}

irods-repave-dev() {
    irods-stop-server
    irods-remake-database
    irods-uninstall-irods
    irods-install-irods-dev
    irods-setup-irods
}

irods-repave-403() {
    irods-stop-server
    irods-remake-database
    irods-uninstall-irods
    irods-install-irods-403
    irods-setup-irods
}

irods-repave-403-debug() {
    irods-stop-server
    irods-remake-database
    irods-uninstall-irods
    irods-install-irods-403-debug
    irods-setup-irods
}

irods-rebuild-parameterized() {
    rm -f ${BASH_IRODS_REPO_DIR}/build/*
    ${BASH_IRODS_REPO_DIR}/packaging/build.sh clean
    sudo ${BASH_IRODS_REPO_DIR}/packaging/build.sh $1 icat $2
    sudo chown -R kellerb:kellerb ${BASH_IRODS_REPO_DIR}
}

irods-rebuild-postgres-debug() {
    irods-rebuild-parameterized '' 'postgres'
}

irods-rebuild-postgres() {
    irods-rebuild-parameterized '-r' 'postgres'
}

irods-rebuild-mysql() {
    irods-rebuild-parameterized '-r' 'mysql'
}

irods-rebuild-oracle() {
    irods-rebuild-parameterized '-r' 'oracle'
}

irods-repave-tests() {
    sudo cp ${BASH_IRODS_REPO_DIR}/tests/pydevtest/* ~irods/tests/pydevtest/
    sudo chown -R irods:irods ~irods/tests/pydevtest/
}
